name: Deploy Lambda Function
on: [push]
permissions: write-all
    
jobs:
  lint:
    runs-on: ubuntu-latest
    steps: 
      - name: Check out code
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install libraries
        run: pip install flake8
      - name: Lint with flake8
        run: |
            cd function
            flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
            flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  build:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install libraries
        run: |
            cd function
            python -m pip install --upgrade pip
            if [ -f requirements.txt ]; then pip install -r requirements.txt -t .; fi 
      - name: Zip bundle
        run: |
            cd function
            zip -r ../${{ github.sha }}.zip .
      - name: Archive artifact
        uses: actions/upload-artifact@v2
        with:
          name: zipped-bundle
          path: ${{ github.sha }}.zip
    

  publish:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.github_token }}
        with: 
          tag_name: ${{ github.run_number }}
          release_name: Release from ${{ github.run_number}}
          body: New relase for ${{ github.sha }}. Release Notes
          prerelease: false
          draft: false
      - name: download artifact
        uses: actions/download-artifact@v2
        with:
          name: zipped-bundle
      - name: upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.github_token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ github.sha }}.zip
          asset_name: source_code_libraries
          asset_content_type: application/zip
        
  upload:
    runs-on: ubuntu_latest
    needs: build
    steps:
        - name: download artifact
          uses: actions/download-artifact@v2
          with:
           name: zipped-bundle
        - name: Upload files to s3
          uses: roimor/aws-cli-action@v1
          with:
            args: s3 cp zipped-bundle s3://github-action-upload-test-1234/
          env:
           AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
           AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
           AWS_DEFAULT_REGION: us-east-1
          
       
         

